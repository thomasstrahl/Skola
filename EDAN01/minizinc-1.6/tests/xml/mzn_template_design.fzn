% RUNS ON fzn_xml
array [1..7] of int: d = [250, 255, 260, 500, 500, 800, 1100];
var bool: BOOL____2 :: is_defined_var :: var_is_introduced;
var bool: BOOL____3 :: is_defined_var :: var_is_introduced;
var bool: BOOL____4 :: is_defined_var :: var_is_introduced;
var bool: BOOL____6 :: is_defined_var :: var_is_introduced;
var bool: BOOL____7 :: is_defined_var :: var_is_introduced;
var bool: BOOL____8 :: is_defined_var :: var_is_introduced;
var 204..408: INT____11 :: is_defined_var :: var_is_introduced;
var 0..7344: INT____12 :: is_defined_var :: var_is_introduced;
var 0..7344: INT____13 :: is_defined_var :: var_is_introduced;
var 0..7344: INT____14 :: is_defined_var :: var_is_introduced;
var 0..7344: INT____15 :: is_defined_var :: var_is_introduced;
var 0..7344: INT____16 :: is_defined_var :: var_is_introduced;
var 0..7344: INT____17 :: is_defined_var :: var_is_introduced;
var 0..7344: INT____18 :: is_defined_var :: var_is_introduced;
var 0..7344: INT____19 :: is_defined_var :: var_is_introduced;
var 0..7344: INT____20 :: is_defined_var :: var_is_introduced;
var 0..7344: INT____21 :: is_defined_var :: var_is_introduced;
var 0..7344: INT____22 :: is_defined_var :: var_is_introduced;
var 0..7344: INT____23 :: is_defined_var :: var_is_introduced;
var 0..7344: INT____24 :: is_defined_var :: var_is_introduced;
var 0..7344: INT____25 :: is_defined_var :: var_is_introduced;
var 408..816: Production :: output_var;
array [1..2] of var 1..816: R :: output_array([1..2]);
var 7..408: Surplus;
array [1..3] of var bool: b____1;
array [1..14] of var 0..9: p :: output_array([1..7, 1..2]);
constraint array_bool_and([BOOL____4, BOOL____2], b____1[1]);
constraint array_bool_and([BOOL____8, BOOL____6], b____1[2]);
constraint array_bool_or([BOOL____3, b____1[2]], BOOL____4) :: defines_var(BOOL____4);
constraint array_bool_or([BOOL____7, b____1[3]], BOOL____8) :: defines_var(BOOL____8);
constraint bool_eq(b____1[1], true);
constraint int_div(Production, 2, INT____11) :: defines_var(INT____11);
constraint int_le(INT____11, R[2]);
constraint int_le(R[1], INT____11);
constraint int_le_reif(p[7], p[9], BOOL____2) :: defines_var(BOOL____2);
constraint int_le_reif(p[8], p[10], BOOL____6) :: defines_var(BOOL____6);
constraint int_lin_eq([-1, 9], [Surplus, Production], 3665);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1], [p[1], p[3], p[5], p[7], p[9], p[11], p[13]], 9);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1], [p[2], p[4], p[6], p[8], p[10], p[12], p[14]], 9);
constraint int_lin_le([-1, -1], [INT____12, INT____14], -250);
constraint int_lin_le([-1, -1], [INT____13, INT____15], -255);
constraint int_lin_le([-1, -1], [INT____16, INT____17], -260);
constraint int_lin_le([-1, -1], [INT____18, INT____19], -500);
constraint int_lin_le([-1, -1], [INT____20, INT____21], -500);
constraint int_lin_le([-1, -1], [INT____22, INT____23], -800);
constraint int_lin_le([-1, -1], [INT____24, INT____25], -1100);
constraint int_lin_le([-1, 1, 1], [Surplus, INT____12, INT____14], 500);
constraint int_lin_le([-1, 1, 1], [Surplus, INT____13, INT____15], 510);
constraint int_lin_le([-1, 1, 1], [Surplus, INT____16, INT____17], 520);
constraint int_lin_le([-1, 1, 1], [Surplus, INT____18, INT____19], 1000);
constraint int_lin_le([-1, 1, 1], [Surplus, INT____20, INT____21], 1000);
constraint int_lin_le([-1, 1, 1], [Surplus, INT____22, INT____23], 1600);
constraint int_lin_le([-1, 1, 1], [Surplus, INT____24, INT____25], 2200);
constraint int_lin_le([-1, 1, 1, 1, 1], [Surplus, INT____12, INT____13, INT____14, INT____15], 1010);
constraint int_lin_le([-1, 1, 1, 1, 1, 1, 1], [Surplus, INT____12, INT____13, INT____14, INT____15, INT____16, INT____17], 1530);
constraint int_lin_le([-1, 1, 1, 1, 1, 1, 1, 1, 1], [Surplus, INT____12, INT____13, INT____14, INT____15, INT____16, INT____17, INT____18, INT____19], 2530);
constraint int_lin_le([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [Surplus, INT____12, INT____13, INT____14, INT____15, INT____16, INT____17, INT____18, INT____19, INT____20, INT____21], 3530);
constraint int_lin_le([-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [Surplus, INT____12, INT____13, INT____14, INT____15, INT____16, INT____17, INT____18, INT____19, INT____20, INT____21, INT____22, INT____23], 5130);
constraint int_lin_le([1, -1, 1, -1], [INT____12, INT____13, INT____14, INT____15], -1);
constraint int_lin_le([1, 1, -1, -1], [INT____13, INT____15, INT____16, INT____17], -1);
constraint int_lin_le([1, 1, -1, -1], [INT____16, INT____17, INT____18, INT____19], -1);
constraint int_lin_le([1, 1, -1, -1], [INT____20, INT____21, INT____22, INT____23], -1);
constraint int_lin_le([1, 1, -1, -1], [INT____22, INT____23, INT____24, INT____25], -1);
constraint int_lt_reif(p[7], p[9], BOOL____3) :: defines_var(BOOL____3);
constraint int_lt_reif(p[8], p[10], BOOL____7) :: defines_var(BOOL____7);
constraint int_plus(R[1], R[2], Production);
constraint int_times(p[1], R[1], INT____12) :: defines_var(INT____12);
constraint int_times(p[3], R[1], INT____13) :: defines_var(INT____13);
constraint int_times(p[2], R[2], INT____14) :: defines_var(INT____14);
constraint int_times(p[4], R[2], INT____15) :: defines_var(INT____15);
constraint int_times(p[5], R[1], INT____16) :: defines_var(INT____16);
constraint int_times(p[6], R[2], INT____17) :: defines_var(INT____17);
constraint int_times(p[7], R[1], INT____18) :: defines_var(INT____18);
constraint int_times(p[8], R[2], INT____19) :: defines_var(INT____19);
constraint int_times(p[9], R[1], INT____20) :: defines_var(INT____20);
constraint int_times(p[10], R[2], INT____21) :: defines_var(INT____21);
constraint int_times(p[11], R[1], INT____22) :: defines_var(INT____22);
constraint int_times(p[12], R[2], INT____23) :: defines_var(INT____23);
constraint int_times(p[13], R[1], INT____24) :: defines_var(INT____24);
constraint int_times(p[14], R[2], INT____25) :: defines_var(INT____25);
solve :: int_search([p[1], p[2], p[3], p[4], p[5], p[6], p[7], p[8], p[9], p[10], p[11], p[12], p[13], p[14], R[1], R[2]], input_order, indomain_min, complete) minimize Production;

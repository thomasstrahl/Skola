.TH FZN2XCSP 1 "19 September 2012" "" "G12 User's Manual"

.SH NAME
fzn2xcsp \- a FlatZinc to XCSP converter

.SH SYNOPSIS
.B fzn2xcsp
[
.BR OPTIONS " ]"
.I model.fzn

.SH DESCRIPTION
.B fzn2xcsp
converts the FlatZinc instance in
.I model.fzn
into an XCSP 2.1 model.
.PP
By default, the XCSP model is written to the file
.IR model.xcsp .

.SH "ASPECTS OF THE TRANSLATION"

.PP
XCSP 2.1. does not support Boolean, float and set variables.
FlatZinc models containing float or set variables are rejected.
Boolean variables in FlatZinc models are represented by
binary integer variables; the constraints involving them are
translated accordingly.

.PP
XCSP 2.1 does not support arrays of variables.
A FlatZinc array is translated as a collection of individual variables
whose names are based on the original array name and the respective index.

.PP
XCSP 2.1 does not support unbounded integer variables.
Such variables are given default bounds of -/+ 1.000.000.
This default can be changed using
.B\-\-default\-int\-{lb,ub}
options.

.PP
XCSP 2.1 does not support optimisation problems.
By default, the translation aborts if it encounters a FlatZinc
optimization instance.
The command line option
.B\-\-ignore\-objective
may be used to translate such instances into the corresponding
feasibility problem.

.PP
XCSP 2.1 does not support degenerate models: those having no variables or
constraints or where a constraint has no variables.
These limitations are ignored.

.PP
The translation attempts to represent FlatZinc constraints in a natural XCSP
way.  For example, linear constraints are represented as "global:weightedSum"
constraints, and "element" constraints are turned into "global:element"
constraints.  The "all_different" constraint is turned into "global:allDifferent".
"table" constraints are mapped to XCSP relations.

Other FlatZinc constraints are defined as XCSP predicates using the functional
representation.

.SH GLOBAL CONSTRAINTS
The MiniZinc standard library has XCSP\-specific global constraint
definitions in the directory
.BR xcsp .

.SH OPTIONS
.TP
.B \-h, \-\-help
Print the help message.
.TP
.B \-\-version
Print version information.
.TP
.B \-v, \-\-verbose
Output progress information as conversion proceeds.
.TP
.B \-\-output\-to\-stdout
Write the XCSP to the standard output instead of the default output file.
.TP
.B \-\-default\-int\-lb
Specify a lower bound for unbounded integer variables.
.TP
.B \-\-default\-int\-ub
Specify an upper bound for unbounded integer variables.
.TP
.B \-i, \-\-ignore\-objective
Ignore the objective, if present, and treat the problem as a satisfiability
problem.

.SH DEBUGGING OPTIONS
.TP
.B \-\-config\-info
Output information about how this executable was compiled.
.TP
.B \-S, \-\-statistics
Output messages about time/space usage to stderr.
.TP
.B \-\-pprint\-before <name>
Pretty\-print the IR before stage <name>.
.TP
.B \-\-pprint\-after <name>
Pretty\-print the IR after stage <name>.
.TP
.B \-\-pprint\-ignore\-file <file>
Ignore items from <file> when pretty\-printing.
.TP
.B \-\-dump\-before <name>
Dump the full IR before stage <name>.
.TP
.B \-\-dump\-after <name>
Dump IR after stage <name>.
.TP
.B \-\-stop\-before <name>
Stop conversion before stage <name>.
.TP
.B \-\-stop\-after <name>
Stop conversion after stage <name>.

.TP
Valid stage names:
parsing, structure-checking, type-inst-checking, evaluation.

.SH VERSION INFORMATION
This manual page documents
.B fzn2xcsp
version 1.6.0.

.SH AUTHORS
The G12 team.

.SH "SEE ALSO"
.BR mzn2fzn (1)

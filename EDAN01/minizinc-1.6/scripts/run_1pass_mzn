#!/bin/sh
#----------------------------------------------------------------------------#
# vim: ts=4 sw=4 expandtab
#----------------------------------------------------------------------------#

# The following variables have their values set by the command line 
# options.  These assignments give their default values.
#
FLATZINC_CMD=
FLATZINC_FLAGS=
FLATZINC_WARN_ANNS=
FLATZINC_FALSE_CONSTRS=
FLATZINC_WARN_IGN_ANNS=
FLATZINC_WARN_SEARCH_PARAMS=
FLATZINC_OUTPUT_FLAGS=
MZN2FZN_OPTS=

MINIZINC_EXEC=${MINIZINC-minizinc}
SOLNS2DZN_EXEC=solns2dzn

if test "$G12PATH"; then
    MINIZINC_EXEC="$G12PATH/$MINIZINC_EXEC"
    SOLNS2DZN_EXEC="$G12PATH/$SOLNS2DZN_EXEC"
fi

usage="\
Usage: run_1pass_mzn [<options>] model.mzn

    Evaluate a MiniZinc model. 

Options:

    -d <file>, --data <file>
        Specify the data to be used by the model.

    -c, --canonicalise
        Canonicalise the output stream using solns2dzn.

    -o <file>, --output-to-file <file>
        Write the solution to the specified file instead of to the standard
        output.

    -s <solver>, --solver <solver>
        Specify use of a specific solver (by default the generic solver
        is used).

    -G <dir>, --globals-dirs <dir>
        Specify additional globals to use.

    --no-warn-unknown-annotations
        Do not warn about unknown annotations.

    --no-warn-false-constraints
        Do not warn about constraints that are always false.

    --no-warn-ignored-annotations
        Do not warn about annotations that are ignored by the solver backend.
        (This option is only supported by the FD solver backend.)

    --no-warn-unsupported-search-params
        Do not warn about parameters of standard search annotations that are
        not supported. 

    -v, --verbose
        Output a progress message. Also adds extra information (in comments)
        to the top of the output file.

    -h, --help
        Print this message and exit.

    -S, --statistics
        Output messages about time/space usage to the standard error.
    
    -n <n>, --num-solutions <n>
        An upper bound on the number of solutions to display.
        (The default is 1.)

    -a, --all, --all-solutions
        Print all solutions.
"

verbose=no
statistics=no
canonicalise_output=no
output_file="stdout"

while test $# -gt 0
do
    case $1 in

        -h|--help)
            echo "$usage"
            exit 1
        ;;

        -v|--verbose)
            verbose=yes
        ;;    

        -S|--statistics)
            statistics=yes
        ;;

        -d|--data)
            MZN2FZN_OPTS="--data $2 $MZN2FZN_OPTS"
            shift
        ;;

        -d*)
            MZN2FZN_OPTS="--data `expr $1 : '-d\(.*\)'` $MZN2FZN_OPTS"
        ;;

        -c|--canonicalise)
            canonicalise_output="yes"
        ;;

        -o|--output-to-file)
            output_file="$2"
            shift
        ;;

        -s|--solver)
            FLATZINC_FLAGS="--solver $2 $FLATZINC_FLAGS"
            shift
        ;;

        -G*)
            MZN2FZN_OPTS="--globals-dir `expr $1 : '-G(.*\)'` $MZN2FZN_OPTS"
        ;;

        -G|--globals-dir)
            MZN2FZN_OPTS="--globals-dir $2 $MZN2FZN_OPTS"
            shift
        ;;

        --no-warn-unknown-annotations)
            FLATZINC_WARN_ANNS="--no-warn-unknown-annotations"
        ;;

        --no-warn-false-constraints)
            FLATZINC_FALSE_CONSTRS="--no-warn-false-constraints"
        ;;

        --no-warn-ignored-annotations)
            FLATZINC_WARN_IGN_ANNS="--no-warn-ignored-annotations"
        ;;

        --no-warn-unsupported-search-params)
            FLATZINC_WARN_SEARCH_PARAMS="--no-warn-unsupported-search-params"    
        ;;
        
        -n|--num-solutions)
            FLATZINC_FLAGS="$FLATZINC_FLAGS --num-solutions $2"
            shift
        ;;

        -a|--all|--all-solutions)
            FLATZINC_FLAGS="$FLATZINC_FLAGS -a"
        ;;

        -n*)
            FLATZINC_FLAGS="$FLATZINC_FLAGS --num-solutions `expr $1 : '-n\(.*\)'`"
        ;;

        --)
            shift
            break 
        ;;
       
        -*)
            echo "$0: unknown option \`$1'" 1>&2
            echo "$usage" 1>&2
            exit 1
        ;;

        *)
            break
        ;;

    esac
    shift
done

if test ! $# -eq 1
then
    echo "$usage" 1>&2
    exit 1
fi

if test "$statistics" = "yes"
then
    STATISTICS_FLAGS="-S"
fi

FLATZINC_FLAGS="$FLATZINC_FALSE_CONSTRS $FLATZINC_WARN_ANNS $FLATZINC_WARN_IGN_ANNS $FLATZINC_WARN_SEARCH_PARAMS $FLATZINC_FLAGS"

mzn_file="$@"
base_file=`basename $mzn_file .mzn`

case "$canonicalise_output" in
    yes)
        case "$output_file" in
            stdout)
                "$MINIZINC_EXEC" $MAP_FLAGS $MZN2FZN_OPTS $STATISTICS_FLAGS $FLATZINC_FLAGS "$mzn_file" | "$SOLNS2DZN_EXEC" -c
            ;;

            *)
                "$MINIZINC_EXEC" $MAP_FLAGS $MZN2FZN_OPTS $STATISTICS_FLAGS $FLATZINC_FLAGS "$mzn_file" | "$SOLNS2DZN_EXEC" -c > "$output_file"
            ;;
        esac 
    ;;

    no)
        case "$output_file" in
            stdout)
                "$MINIZINC_EXEC" $MAP_FLAGS $MZN2FZN_OPTS $STATISTICS_FLAGS $FLATZINC_FLAGS "$mzn_file"
            ;;

            *)
                "$MINIZINC_EXEC" $MAP_FLAGS $MZN2FZN_OPTS $STATISTICS_FLAGS $FLATZINC_FLAGS "$mzn_file" > "$output_file"
            ;;
        esac
    ;;
esac

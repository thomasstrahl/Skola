% RUNS ON flatzinc
% RUNS ON fzn_fd
% RUNS ON fzn_fdlp
% RUNS ON fzn_lazyfd
% "Job Shop" example taken from the MiniZinc paper.

array [1..4] of var 0..14: s :: output_array([1..4]);
var 0..14: end :: output_var;
var bool: b1 :: output_var;
var bool: b2 :: output_var;
var bool: b3 :: output_var;
var bool: b4 :: output_var;
constraint  int_lin_le     ([1,-1], [s[1], s[2]], -2);
constraint  int_lin_le     ([1,-1], [s[2], end ], -5);
constraint  int_lin_le     ([1,-1], [s[3], s[4]], -3);
constraint  int_lin_le     ([1,-1], [s[4], end ], -4);
constraint  int_lin_le_reif([1,-1], [s[1], s[3]], -2, b1);
constraint  int_lin_le_reif([1,-1], [s[3], s[1]], -3, b2);
constraint  bool_or(b1, b2, true);
constraint  int_lin_le_reif([1,-1], [s[2], s[4]], -5, b3);
constraint  int_lin_le_reif([1,-1], [s[4], s[2]], -4, b4);
constraint  bool_or(b3, b4, true);
solve minimize end;
